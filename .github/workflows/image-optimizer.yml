# 文件路径: .github/workflows/image-optimizer.yml

name: '🤖 Optimize Bundle Images with ShortPixel'

on:
  push:
    branches:
      - main
    paths:
      - 'content/**/*.jpg'
      - 'content/**/*.png'
      - 'content/**/*.jpeg'

jobs:
  build:
    name: Convert Images Job
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    if: github.event.pusher.name != 'GitHub Actions Bot' && github.event.pusher.name != 'github-actions[bot]'

    steps:
      - name: '⬇️ Checkout Code'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          fetch-depth: 0

      - name: '🔧 Install Dependencies (ImageMagick & jq)'
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick jq
      
      - name: '🔄 Find, Process, and Replace Images'
        env:
          SHORTPIXEL_KEY: ${{ secrets.SHORTPIXEL_KEY }}
        run: |
          echo "🔍 Finding new or modified images..."
          MODIFIED_FILES=$(git diff-tree --no-commit-id --name-only -r -z HEAD~1 HEAD -- 'content/**/*.jpg' 'content/**/*.png' 'content/**/*.jpeg' | xargs -0)

          if [ -z "$MODIFIED_FILES" ]; then
            echo "✅ No new or modified images found to process. Exiting."
            exit 0
          fi

          echo "🚀 Processing the following files:"
          echo "$MODIFIED_FILES"

          URLS_JSON=$(echo "$MODIFIED_FILES" | jq -R . | jq -s 'map("https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/" + .)')
          
          echo "Building JSON payload..."
          JSON_PAYLOAD=$(jq -n --arg key "$SHORTPIXEL_KEY" --argjson urls "$URLS_JSON" '{
            key: $key,
            plugin_version: "GHA25",
            lossy: 2,
            wait: 30,
            resize: 0,
            convertto: "avif",
            urllist: $urls
          }')

          echo "📞 Calling ShortPixel API..."
          API_RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" -d "$JSON_PAYLOAD" https://api.shortpixel.com/v2/reducer.php)

          if echo "$API_RESPONSE" | jq -e '.[0].Status.Code == "-2"' > /dev/null; then
              echo "❌ ERROR: ShortPixel API returned an error."
              echo "$API_RESPONSE" | jq
              exit 1
          fi

          echo "✅ API call successful. Processing results..."
          echo "$API_RESPONSE" | jq -c '.[]' | while read -r item; do
            original_url=$(echo "$item" | jq -r .OriginalURL)
            avif_url=$(echo "$item" | jq -r .AVIFURL)
            
            original_path=$(echo "$original_url" | sed "s|https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/||")
            
            if [ -z "$original_path" ]; then
                echo "⚠️ Could not extract path for $original_url. Skipping."
                continue
            fi
            
            dir_path=$(dirname "$original_path")
            base_name=$(basename "$original_path" | sed 's/\.[^.]*$//')
            avif_path="$dir_path/$base_name.avif"

            echo "    - Downloading AVIF for $original_path -> $avif_path"
            
            # <<< FIX START >>>
            # 修复：在下载前短暂等待，给 CDN 传播留出时间
            sleep 3
            # 修复：为 curl 添加重试逻辑，使其在遇到临时网络问题时更稳健
            # --retry 3: 最多重试3次
            # --retry-delay 5: 每次重试间隔5秒
            curl -s --retry 3 --retry-delay 5 -o "$avif_path" "$avif_url"
            # <<< FIX END >>>

            if [ -f "$original_path" ]; then
              dimensions=$(identify -format "%wx%h" "$original_path")
              yaml_file="$dir_path/.image_dimensions.yaml"
              
              touch "$yaml_file"
              
              if grep -q "${base_name}:" "$yaml_file"; then
                sed -i "s|${base_name}:.*|${base_name}: ${dimensions}|" "$yaml_file"
              else
                echo "${base_name}: ${dimensions}" >> "$yaml_file"
              fi
              echo "    - Saved dimensions (${dimensions}) to ${yaml_file}"

              echo "    - Removing original file: $original_path"
              rm "$original_path"
            else
              echo "    - Warning: Original file $original_path not found locally. Cannot get dimensions or remove."
            fi
          done

          echo "🎉 Image processing complete."

      - name: '🔄 Synchronize changes before committing'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions-bot@users.noreply.github.com'
          git pull --rebase
          
      - name: '🚀 Commit and Push Changes'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'build(media): Convert bundle images to AVIF via ShortPixel'
          commit_author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
