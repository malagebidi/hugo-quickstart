# 文件路径: .github/workflows/image-optimizer.yml

name: '🤖 Optimize Bundle Images with ShortPixel'

on:
  push:
    branches:
      - main
    paths:
      - 'content/**/*.jpg'
      - 'content/**/*.png'
      - 'content/**/*.jpeg'
  
  schedule:
    - cron: '0 0 * * *' # 北京时间每日上午8点
    
  workflow_dispatch:

jobs:
  build:
    name: Convert Images Job
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    if: github.event.pusher.name != 'GitHub Actions Bot' && github.event.pusher.name != 'github-actions[bot]'

    steps:
      - name: '⬇️ Checkout Code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: '🔧 Install Dependencies (ImageMagick, jq, dnsutils)'
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick jq dnsutils

      - name: '🔄 Find Images to Process'
        id: find_files
        run: |
          echo "🔍 Finding images that need conversion..."
          UNCONVERTED_FILES=""
          find content -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" \) | while read -r original_file; do
            base_name=$(basename "$original_file" | sed 's/\.[^.]*$//')
            dir_path=$(dirname "$original_file")
            avif_file="$dir_path/$base_name.avif"
            if [ ! -f "$avif_file" ]; then
              echo "  - Found unconverted: $original_file"
              UNCONVERTED_FILES="$UNCONVERTED_FILES$original_file "
            fi
          done
          echo "files_to_process=${UNCONVERTED_FILES}" >> $GITHUB_OUTPUT

      - name: '🚀 Process Images with ShortPixel'
        if: steps.find_files.outputs.files_to_process != ''
        env:
          SHORT_PIXEL_KEY: ${{ secrets.SHORT_PIXEL_KEY }} # 修正了变量名, 以匹配 secrets
          FILES_TO_PROCESS: ${{ steps.find_files.outputs.files_to_process }}
        run: |
          echo "🚀 Processing the following files:"
          echo "$FILES_TO_PROCESS"

          URLS_JSON=$(echo "$FILES_TO_PROCESS" | tr ' ' '\n' | jq -R . | jq -s 'map("https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/" + .)')
          
          echo "Building JSON payload..."
          # 我们仍然设置一个等待时间, 以便快速处理大多数图片
          JSON_PAYLOAD=$(jq -n --arg key "$SHORT_PIXEL_KEY" --argjson urls "$URLS_JSON" '{
            key: $key,
            plugin_version: "GHA30",
            lossy: 2,
            wait: 30, 
            convertto: "+avif",
            urllist: $urls
          }')

          echo "📞 Calling ShortPixel API..."
          API_RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" -d "$JSON_PAYLOAD" https://api.shortpixel.com/v2/reducer.php)

          echo "✅ API call successful. Analyzing results..."
          echo "$API_RESPONSE" | jq -c '.[]' | while read -r item; do
            original_url=$(echo "$item" | jq -r .OriginalURL)
            original_path=$(echo "$original_url" | sed "s|https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/||")
            
            # <<< CORE LOGIC UPGRADE: State Machine based on Status.Code >>>
            status_code=$(echo "$item" | jq -r .Status.Code)
            status_message=$(echo "$item" | jq -r .Status.Message)

            # 状态 2: 成功! 图片已处理完毕
            if [ "$status_code" == "2" ]; then
                avif_url=$(echo "$item" | jq -r .AVIFURL)
                
                # 双重保险: 即使状态是2, 也验证URL非空
                if [ "$avif_url" == "null" ] || [ -z "$avif_url" ]; then
                    echo "    - ⚠️ UNEXPECTED: Status is 2 but AVIF URL is null for '$original_path'. Skipping."
                    continue
                fi

                dir_path=$(dirname "$original_path")
                base_name=$(basename "$original_path" | sed 's/\.[^.]*$//')
                avif_path="$dir_path/$base_name.avif"

                echo "    - ✅ SUCCESS ($status_code): Downloading AVIF for $original_path -> $avif_path"
                
                temp_url="${avif_url#*//}"
                url_hostname="${temp_url%%/*}"
                ip_address=$(dig @1.1.1.1 "$url_hostname" +short | head -n 1)

                if [ -z "$ip_address" ]; then
                  echo "    -   ❌ FAILED to resolve IP for '${url_hostname}'. Skipping download, will retry on next run."
                  continue
                fi

                curl -fsS --retry 3 --retry-delay 5 --resolve "${url_hostname}:443:${ip_address}" -o "$avif_path" "$avif_url"
                
                if [ -f "$avif_path" ] && [ -s "$avif_path" ]; then
                    dimensions=$(identify -format "%wx%h" "$original_path")
                    yaml_file="$dir_path/.image_dimensions.yaml"
                    touch "$yaml_file"
                    if grep -q "${base_name}:" "$yaml_file"; then
                        sed -i "s|${base_name}:.*|${base_name}: ${dimensions}|" "$yaml_file"
                    else
                        echo "${base_name}: ${dimensions}" >> "$yaml_file"
                    fi
                    echo "    -   Saved dimensions (${dimensions}) and removing original file: $original_path"
                    rm "$original_path"
                else
                    echo "    -   ❌ FAILED to download or file is empty. Will retry on next run."
                fi

            # 状态 1: 处理中...
            elif [ "$status_code" == "1" ]; then
                echo "    - ⏳ IN PROGRESS ($status_code): '$original_path' is still processing. Skipping for now, will be checked on the next scheduled run."
                continue
            
            # 其他状态: 错误
            else
                echo "    - ❌ ERROR ($status_code): Could not process '$original_path'. Reason: '$status_message'. Please check the file or your ShortPixel account."
                continue
            fi
            # <<< END OF CORE LOGIC UPGRADE >>>
          done
      
      - name: '🚀 Commit and Push Changes'
        if: steps.find_files.outputs.files_to_process != ''
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'build(media): Convert bundle images to AVIF via ShortPixel'
          commit_author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>

