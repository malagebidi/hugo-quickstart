# .github/workflows/image-optimizer.yml
name: Convert Bundle Images to AVIF with ImageMagick
on:
  push:
    branches:
      - main
    paths:
      - 'content/**/*.jpg'
      - 'content/**/*.png' 
      - 'content/**/*.jpeg'
jobs:
  build:
    name: Convert Images Job
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install ImageMagick
        run: sudo apt-get update && sudo apt-get install -y imagemagick
      - name: Find, Convert, Save Dimensions, and Cleanup Images
        run: |
          echo "Starting image conversion with ImageMagick..."
          
          find content/posts -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" -o -iname "*.webp" \) -print0 | while IFS= read -r -d $'\0' file; do
            dir=$(dirname "$file")
            filename=$(basename "$file")
            base="${filename%.*}"
            
            echo "Found source image: $file"
            
            # Get image dimensions using ImageMagick identify
            dimensions=$(identify -format "%wx%h" "$file")
            width=$(echo $dimensions | cut -d'x' -f1)
            height=$(echo $dimensions | cut -d'x' -f2)
            
            echo "Image dimensions: ${width}x${height}"
            
            # Create or update the dimensions data file in the same directory (hidden file)
            dimensions_file="${dir}/.image_dimensions.yaml"
            
            # Check if dimensions file already exists in this directory
            if [ ! -f "$dimensions_file" ]; then
              echo "# Image Dimensions Data - Auto-generated by GitHub Actions" > "$dimensions_file"
              echo "dimensions:" >> "$dimensions_file"
            fi
            
            # Append dimensions for this image
            echo "  \"${base}\":" >> "$dimensions_file"
            echo "    width: $width" >> "$dimensions_file"
            echo "    height: $height" >> "$dimensions_file"
            
            avif_output="${dir}/${base}.avif"
            echo "Target AVIF path: $avif_output"
            # --- THE FIX: Use the 'convert' command instead of 'magick' ---
            convert "$file" -quality 50 "$avif_output"
            if [ $? -eq 0 ]; then
              echo "Successfully created AVIF. Deleting original: $file"
              rm "$file"
            else
              echo "ERROR: Failed to process $file with ImageMagick/convert. Halting workflow."
              exit 1
            fi
            echo "---------------------------------"
          done
          echo "Image conversion finished."
          echo "Dimensions data saved to respective directories as .image_dimensions.yaml"
      - name: Commit and Push Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'build(media): Convert bundle images to AVIF with dimension data and remove source'
          commit_user_name: 'GitHub Actions Bot'
          commit_user_email: 'actions@github.com'
